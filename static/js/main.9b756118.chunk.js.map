{"version":3,"sources":["core/redux.ts","ducks/locale.ts","ducks/router.ts","App.tsx","core/history.ts","ducks/index.ts","core/localization.ts","serviceWorker.ts","index.tsx"],"names":["store","localeActions","internal","languageChanged","createAction","language","start","change","showModal","hideModal","localeEpics","action$","state$","localization","pipe","ofType","getType","mapTo","getLanguage","tap","action","setLanguage","payload","map","localeEpic","combineEpics","reducer","state","type","routerActions","locationChanged","location","push","path","replace","go","n","goBack","goForward","routerEpics","history","switchMap","Observable","observer","listen","next","ignoreElements","routerEpic","App","dispatch","useDispatch","locale","useSelector","router","useEffect","spring","useSpring","opacity","number","from","className","main","style","JSON","stringify","span","interpolate","val","Math","floor","backgroundColor","createBrowserHistory","dependencies","LocalizedStrings","en","es","localStorage","rootEpic","combineReducers","localeReducer","routerReducer","epicMiddleware","createEpicMiddleware","createStore","rootReducer","applyMiddleware","run","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9b756118.chunk.js","sourcesContent":["import { applyMiddleware, createStore, Store } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport logger from 'redux-logger';\nimport { createEpicMiddleware } from 'redux-observable';\n\nimport rootReducer, { dependencies, RootAction, rootEpic, RootState } from '../ducks';\n\nlet store: Store<RootState, RootAction>;\n\nconst epicMiddleware = createEpicMiddleware({ dependencies });\n\nif (process.env.NODE_ENV !== 'production') {\n  store = createStore(rootReducer, composeWithDevTools(applyMiddleware(logger, epicMiddleware)));\n} else {\n  store = createStore(rootReducer, applyMiddleware(epicMiddleware));\n}\n\nepicMiddleware.run(rootEpic as any);\n\nexport default store;\n","import { Reducer } from 'redux';\nimport { combineEpics, Epic, ofType } from 'redux-observable';\nimport { map, mapTo, tap } from 'rxjs/operators';\nimport { ActionType, createAction, getType } from 'typesafe-actions';\nimport { dependencies, RootState } from '../ducks';\n\nexport const localeActions = {\n  internal: {\n    languageChanged: createAction(\n      '@@locale-internal/LANGUAGE CHANGED',\n      (language: string) => language\n    )()\n  },\n  start: createAction('@@locale/START')(),\n  change: createAction('@@locale/CHANGE', (language: string) => language)(),\n  showModal: createAction('@@locale/SHOW MODAL')(),\n  hideModal: createAction('@@locale/HIDE MODAL')()\n};\n\nexport type LocaleAction = ActionType<typeof localeActions>;\n\nexport type LocaleEpic = Epic<LocaleAction, LocaleAction, RootState, typeof dependencies>;\n\nexport const localeEpics = {\n  start: ((action$, state$, { localization }) =>\n    action$.pipe(\n      ofType(getType(localeActions.start)),\n      mapTo(localeActions.internal.languageChanged(localization.getLanguage()))\n    )) as LocaleEpic,\n  change: ((action$, state$, { localization }) =>\n    action$.pipe(\n      ofType(getType(localeActions.change)),\n      tap(action =>\n        localization.setLanguage((action as ReturnType<typeof localeActions.change>).payload)\n      ),\n      map(action =>\n        localeActions.internal.languageChanged(\n          (action as ReturnType<typeof localeActions.change>).payload\n        )\n      )\n    )) as LocaleEpic\n};\n\nexport const localeEpic = combineEpics<LocaleEpic>(localeEpics.start, localeEpics.change);\n\nexport type LocaleState = Readonly<{ language?: string; showModal: boolean }>;\n\nconst reducer: Reducer<LocaleState, LocaleAction> = (\n  state: LocaleState = {\n    showModal: false\n  },\n  action: LocaleAction\n) => {\n  switch (action.type) {\n    case getType(localeActions.internal.languageChanged):\n      return { ...state, language: action.payload };\n    case getType(localeActions.showModal):\n      return { ...state, showModal: true };\n    case getType(localeActions.hideModal):\n      return { ...state, showModal: false };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { Location } from 'history';\nimport { Reducer } from 'redux';\nimport { combineEpics, Epic, ofType } from 'redux-observable';\nimport { Observable } from 'rxjs';\nimport { ignoreElements, map, switchMap, tap } from 'rxjs/operators';\nimport { ActionType, createAction, getType } from 'typesafe-actions';\nimport { dependencies, RootState } from '../ducks';\n\nexport const routerActions = {\n  internal: {\n    locationChanged: createAction(\n      '@@router-internal/LOCATION CHANGED',\n      (location: Location) => location\n    )()\n  },\n  start: createAction('@@router/START')(),\n  push: createAction('@@router/PUSH', (path: string, state?: any) => ({ path, state }))(),\n  replace: createAction('@@router/REPLACE', (path: string, state?: any) => ({ path, state }))(),\n  go: createAction('@@router/GO', (n: number) => n)(),\n  goBack: createAction('@@router/GO BACK')(),\n  goForward: createAction('@@router/GO FORWARD')()\n};\n\nexport type RouterAction = ActionType<typeof routerActions>;\n\nexport type RouterEpic = Epic<RouterAction, RouterAction, RootState, typeof dependencies>;\n\nexport const routerEpics = {\n  start: ((action$, state$, { history }) =>\n    action$.pipe(\n      ofType(getType(routerActions.start)),\n      switchMap(\n        () =>\n          new Observable<Location>(observer => history.listen(location => observer.next(location)))\n      ),\n      map(location => routerActions.internal.locationChanged(location))\n    )) as RouterEpic,\n  push: ((action$, state$, { history }) =>\n    action$.pipe(\n      ofType(getType(routerActions.push)),\n      tap(action => {\n        const { path, state } = (action as ReturnType<typeof routerActions.push>).payload;\n        history.push(path, state);\n      }),\n      ignoreElements()\n    )) as RouterEpic,\n  replace: ((action$, state$, { history }) =>\n    action$.pipe(\n      ofType(getType(routerActions.replace)),\n      tap(action => {\n        const { path, state } = (action as ReturnType<typeof routerActions.replace>).payload;\n        history.replace(path, state);\n      }),\n      ignoreElements()\n    )) as RouterEpic,\n  go: ((action$, state$, { history }) =>\n    action$.pipe(\n      ofType(getType(routerActions.go)),\n      tap(action => {\n        history.go((action as ReturnType<typeof routerActions.go>).payload);\n      }),\n      ignoreElements()\n    )) as RouterEpic,\n  goBack: ((action$, state$, { history }) =>\n    action$.pipe(\n      ofType(getType(routerActions.goBack)),\n      tap(() => history.goBack()),\n      ignoreElements()\n    )) as RouterEpic,\n  goForward: ((action$, state$, { history }) =>\n    action$.pipe(\n      ofType(getType(routerActions.goForward)),\n      tap(() => history.goBack()),\n      ignoreElements()\n    )) as RouterEpic\n};\n\nexport const routerEpic = combineEpics<RouterEpic>(\n  routerEpics.start,\n  routerEpics.push,\n  routerEpics.replace,\n  routerEpics.go,\n  routerEpics.goBack,\n  routerEpics.goForward\n);\n\nexport type RouterState = Readonly<{ location?: Location }>;\n\nconst reducer: Reducer<RouterState, RouterAction> = (\n  state: RouterState = {},\n  action: RouterAction\n) => {\n  switch (action.type) {\n    case getType(routerActions.internal.locationChanged):\n      return { ...state, location: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React, { useEffect } from 'react';\nimport { FaBars, FaFacebook, FaGithub, FaLinkedin, FaRegBookmark } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { animated, useSpring } from 'react-spring';\nimport { RootState } from './ducks';\nimport { localeActions } from './ducks/locale';\nimport { routerActions } from './ducks/router';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  const locale = useSelector((state: RootState) => state.locale);\n  const router = useSelector((state: RootState) => state.router);\n\n  useEffect(() => {\n    dispatch(localeActions.start());\n    dispatch(routerActions.start());\n    dispatch(routerActions.push('/'));\n  }, [dispatch]);\n\n  const spring = useSpring({ opacity: 1, number: 2020, from: { opacity: 0, number: 0 } });\n\n  return (\n    <div className=\"font-sans flex flex-col min-h-screen bg-gray-100\">\n      <header className=\"px-4 py-4 flex justify-between bg-gray-900 fixed w-full top-0 z-10 text-white shadow-md\">\n        <div className=\"font-extrabold flex align-middle\">\n          <FaRegBookmark className=\"text-xl text-blue-600\" />{' '}\n          <span className=\"ml-1\">Hansel De La Cruz</span>\n        </div>\n        <div className=\"font-bold text-lg sm:text-sm\">\n          <ul className=\"flex sm:hidden\">\n            <li>\n              <button className=\"rounded p-1 hover:bg-gray-700\">\n                <FaBars />\n              </button>\n            </li>\n          </ul>\n          <ul className=\"hidden sm:flex\">\n            <li>Résumé</li>\n            <li className=\"ml-2\">Projects</li>\n          </ul>\n        </div>\n      </header>\n      <animated.main className=\"container flex-1 mt-20 px-6 break-all\" style={spring}>\n        <p className=\"sm:hidden text-red-700 text-center\">XS</p>\n        <p className=\"hidden sm:block md:hidden text-blue-700 text-center\">SM</p>\n        <p className=\"hidden md:block lg:hidden text-green-700 text-center\">MD</p>\n        <p className=\"hidden lg:block xl:hidden text-yellow-700 text-center\">LG</p>\n        <p className=\"hidden xl:block text-purple-500 text-center\">XL</p>\n        <p>{JSON.stringify(locale)}</p>\n        <p>{JSON.stringify(router)}</p>\n        <animated.span>{spring.number.interpolate(val => Math.floor(val))}</animated.span>\n        <p>\n          Ipsum deserunt nisi eligendi nihil impedit. Atque doloremque nostrum minima iusto delectus\n          voluptas, velit? Minima amet nobis consequatur beatae quis! Quidem ullam voluptatem nobis\n          quasi sequi Reiciendis cumque ducimus sequi perspiciatis quas veniam, nesciunt libero\n          Quidem laudantium nihil corporis iste exercitationem Nisi corrupti minus recusandae velit\n          eius impedit Neque rerum doloribus debitis atque quos? Odit voluptatum exercitationem\n          suscipit at a eius consequuntur! Modi dolorem doloremque odit deserunt laborum Sapiente\n          quidem delectus quibusdam numquam vitae. Perferendis molestiae provident ducimus sunt eos\n          ex Sunt consequuntur perferendis expedita minus error, perferendis consequuntur? Ad\n          doloremque dignissimos soluta aliquid corporis totam Accusantium nulla est unde itaque\n          adipisci nihil eveniet? In dolor nobis voluptates expedita enim. Similique sunt quas\n          dolore nisi eum sunt Similique incidunt at nulla ex quod. Accusantium fuga at aut aperiam\n          maxime, in. Fuga rerum necessitatibus voluptatum debitis recusandae! Libero ea maiores\n          dolorem illum exercitationem quas! Animi esse quae nemo praesentium molestiae rem\n          Quibusdam magni laborum facilis obcaecati harum Repudiandae quo fuga rem error laudantium\n          facere, iusto? Voluptatum rem quae in ullam eaque accusantium. Quibusdam suscipit corrupti\n          dolorem vero pariatur, voluptatem quidem Alias dolorem doloremque possimus laborum\n          blanditiis eligendi. Ipsum quidem accusantium qui esse provident eveniet! Repellat odit\n          doloribus impedit cupiditate doloribus ad porro Autem nostrum ipsa non omnis suscipit\n          dolor ab maiores voluptatem quibusdam aspernatur Velit harum omnis sed accusantium unde\n          eius dicta Beatae nihil velit aliquid temporibus non aspernatur Architecto quo sit laborum\n          minus quasi explicabo deleniti. Alias praesentium numquam provident illum iure! Nulla\n          assumenda impedit maiores assumenda molestias eligendi. Optio explicabo laudantium dolor\n          totam illo. Magni ipsam iure dignissimos fugiat libero facilis. Dolores numquam officiis\n          saepe asperiores ea Labore incidunt qui corrupti quae sunt Perferendis quo culpa amet sint\n          fugit? Quisquam dolor sequi voluptas culpa minus. Alias inventore quo voluptatibus ad\n          earum. Sapiente sapiente esse eaque voluptate et? Nostrum iure vitae necessitatibus vero\n          impedit. Sint culpa cupiditate quas provident recusandae Quisquam ullam totam molestias\n          laboriosam nemo. Modi debitis eius fugit facere dolores, vel Adipisci dolorum expedita\n          mollitia et similique! Excepturi veniam iste a obcaecati veritatis Dolorem vel iste aut\n          dignissimos nam? Pariatur enim voluptatem est soluta tempora recusandae omnis mollitia\n          alias omnis alias! Aut commodi ipsam esse tempore aliquam ex? Voluptate exercitationem\n          optio adipisci quas pariatur fugit! Voluptates nisi iure asperiores quam rerum facilis\n          Repudiandae molestias quasi voluptatem fugiat saepe Facere inventore debitis blanditiis\n          cupiditate numquam Doloribus corrupti nihil reprehenderit aliquam nulla enim, labore!\n          Neque eos inventore itaque cupiditate rem voluptates. Aspernatur nisi vitae ab placeat\n          debitis! Tempore minus numquam tempora quia recusandae? Magnam veritatis vero quam illo\n          aliquam. Omnis nobis praesentium vitae sunt adipisci. Harum enim labore amet quia vel\n          aperiam Vitae praesentium voluptatem perspiciatis architecto qui! Accusamus eveniet sequi\n          mollitia dolore eligendi? Vero earum distinctio assumenda assumenda voluptate odit debitis\n          velit? Est doloribus quod expedita iusto quo, fuga ipsa Voluptas perspiciatis atque magnam\n          unde deleniti ab quod non? Itaque odit distinctio repudiandae ipsam doloremque. Quaerat\n          expedita expedita natus distinctio voluptatem voluptatibus. Vel recusandae voluptatem\n          deleniti molestias quam ut nam Blanditiis numquam doloremque velit repellendus aliquid\n          dignissimos. Quo sequi\n        </p>\n        {/* <button>Click me</button> */}\n      </animated.main>\n      <footer className=\"bg-gray-900 mt-4 px-4 py-16 text-white\">\n        <div className=\"flex justify-between\">\n          <div className=\"text-sm font-semibold\">\n            <ul className=\"flex\">\n              <li>About Me</li>\n              <li className=\"ml-2\">Contact</li>\n            </ul>\n          </div>\n          <div className=\"text-lg\">\n            <ul className=\"flex\">\n              <li>\n                <FaFacebook />\n              </li>\n              <li className=\"ml-3\">\n                <FaLinkedin />\n              </li>\n              <li className=\"ml-3\">\n                <FaGithub />\n              </li>\n            </ul>\n          </div>\n        </div>\n        <hr className=\"border-0 border-gray-800 my-8\" />\n        <div className=\"w-full text-xs text-gray-300 text-center\">\n          <span>&copy; Copyright 2020</span> <span className=\"font-bold\">Hansel De La Cruz</span>\n        </div>\n      </footer>\n      <div\n        className=\"hidden fixed z-50 top-0 left-0 w-full h-full overflow-auto bg-black\"\n        style={{ backgroundColor: 'rgba(0,0,0,0.5)' }}\n      >\n        <div className=\"mt-16 mx-auto p-4 bg-gray-100 rounded w-5/6 text-white\">\n          <div>\n            <h1 className=\"text-lg font-bold\">Header</h1>\n          </div>\n          <div>Content</div>\n          <div>Footer</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import { combineReducers } from 'redux';\nimport { combineEpics } from 'redux-observable';\nimport history from '../core/history';\nimport localization from '../core/localization';\nimport localeReducer, { LocaleAction, localeEpic, LocaleEpic, LocaleState } from './locale';\nimport routerReducer, { RouterAction, routerEpic, RouterEpic, RouterState } from './router';\n\nexport const dependencies = {\n  history,\n  localization,\n  localStorage\n};\n\nexport type RootState = Readonly<{ locale: LocaleState; router: RouterState }>;\n\nexport type RootAction = LocaleAction & RouterAction;\n\nexport type RootEpic = LocaleEpic | RouterEpic;\n\nexport const rootEpic = combineEpics<RootEpic>(localeEpic, routerEpic);\n\nexport default combineReducers<RootState, RootAction>({\n  locale: localeReducer,\n  router: routerReducer\n});\n","import LocalizedStrings from 'react-localization';\n\nconst strings = new LocalizedStrings({ en: { language: 'Language' }, es: { language: 'Idioma' } });\n\nexport default strings;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport App from './App';\nimport history from './core/history';\nimport store from './core/redux';\nimport './generated/index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}