{"version":3,"sources":["core/redux.ts","ducks/locale.ts","ducks/router.ts","singletons/Footer.tsx","singletons/Header.tsx","routes/CV.tsx","routes/Home.tsx","routes/Landing.tsx","routes/Projects.tsx","singletons/Routes.tsx","App.tsx","core/history.ts","ducks/index.ts","core/localization.ts","serviceWorker.ts","index.tsx"],"names":["store","localeActions","internal","languageChanged","createAction","language","start","change","localeEpics","action$","state$","localization","pipe","ofType","getType","mapTo","getLanguage","tap","action","setLanguage","payload","map","localeEpic","combineEpics","reducer","state","type","routerActions","locationChanged","location","push","path","replace","go","n","goBack","goForward","routerEpics","history","switchMap","Observable","observer","listen","next","ignoreElements","routerEpic","Footer","className","Date","getFullYear","Header","dispatch","useDispatch","selected","useSelector","locale","useState","showSidebar","setShowSidebar","showLanguageModal","setShowLanguageModal","sidebarSpring","useSpring","marginLeft","onClick","to","activeClassName","event","target","currentTarget","style","backgroundColor","div","enabled","CV","Helmet","Home","active","setActive","spring","width","progress","config","duration","interpolate","x","Math","floor","Landing","Projects","Routes","router","useEffect","animateScroll","scrollToTop","exact","component","render","App","opacity","number","from","main","JSON","stringify","span","window","hostname","includes","createHashHistory","createBrowserHistory","dependencies","LocalizedStrings","en","es","localStorage","rootEpic","combineReducers","localeReducer","routerReducer","epicMiddleware","createEpicMiddleware","createStore","rootReducer","applyMiddleware","run","Boolean","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9f9d9f9a.chunk.js","sourcesContent":["import { applyMiddleware, createStore, Store } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport logger from 'redux-logger';\nimport { createEpicMiddleware } from 'redux-observable';\n\nimport rootReducer, { dependencies, RootAction, rootEpic, RootState } from '../ducks';\n\nlet store: Store<RootState, RootAction>;\n\nconst epicMiddleware = createEpicMiddleware({ dependencies });\n\nif (process.env.NODE_ENV !== 'production') {\n  store = createStore(rootReducer, composeWithDevTools(applyMiddleware(logger, epicMiddleware)));\n} else {\n  store = createStore(rootReducer, applyMiddleware(epicMiddleware));\n}\n\nepicMiddleware.run(rootEpic as any);\n\nexport default store;\n","import { Reducer } from 'redux';\nimport { combineEpics, Epic, ofType } from 'redux-observable';\nimport { map, mapTo, tap } from 'rxjs/operators';\nimport { ActionType, createAction, getType } from 'typesafe-actions';\nimport { dependencies, RootState } from '../ducks';\n\nexport const localeActions = {\n  internal: {\n    languageChanged: createAction(\n      '@@locale-internal/LANGUAGE CHANGED',\n      (language: string) => language\n    )()\n  },\n  start: createAction('@@locale/START')(),\n  change: createAction('@@locale/CHANGE', (language: string) => language)()\n};\n\nexport type LocaleAction = ActionType<typeof localeActions>;\n\nexport type LocaleEpic = Epic<LocaleAction, LocaleAction, RootState, typeof dependencies>;\n\nexport const localeEpics = {\n  start: ((action$, state$, { localization }) =>\n    action$.pipe(\n      ofType(getType(localeActions.start)),\n      mapTo(localeActions.internal.languageChanged(localization.getLanguage()))\n    )) as LocaleEpic,\n  change: ((action$, state$, { localization }) =>\n    action$.pipe(\n      ofType(getType(localeActions.change)),\n      tap(action =>\n        localization.setLanguage((action as ReturnType<typeof localeActions.change>).payload)\n      ),\n      map(action =>\n        localeActions.internal.languageChanged(\n          (action as ReturnType<typeof localeActions.change>).payload\n        )\n      )\n    )) as LocaleEpic\n};\n\nexport const localeEpic = combineEpics<LocaleEpic>(localeEpics.start, localeEpics.change);\n\nexport type LocaleState = Readonly<{ language?: string }>;\n\nconst reducer: Reducer<LocaleState, LocaleAction> = (\n  state: LocaleState = {},\n  action: LocaleAction\n) => {\n  switch (action.type) {\n    case getType(localeActions.internal.languageChanged):\n      return { ...state, language: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { Location } from 'history';\nimport { Reducer } from 'redux';\nimport { combineEpics, Epic, ofType } from 'redux-observable';\nimport { Observable } from 'rxjs';\nimport { ignoreElements, map, switchMap, tap } from 'rxjs/operators';\nimport { ActionType, createAction, getType } from 'typesafe-actions';\nimport { dependencies, RootState } from '../ducks';\n\nexport const routerActions = {\n  internal: {\n    locationChanged: createAction(\n      '@@router-internal/LOCATION CHANGED',\n      (location: Location) => location\n    )()\n  },\n  start: createAction('@@router/START')(),\n  push: createAction('@@router/PUSH', (path: string, state?: any) => ({ path, state }))(),\n  replace: createAction('@@router/REPLACE', (path: string, state?: any) => ({ path, state }))(),\n  go: createAction('@@router/GO', (n: number) => n)(),\n  goBack: createAction('@@router/GO BACK')(),\n  goForward: createAction('@@router/GO FORWARD')()\n};\n\nexport type RouterAction = ActionType<typeof routerActions>;\n\nexport type RouterEpic = Epic<RouterAction, RouterAction, RootState, typeof dependencies>;\n\nexport const routerEpics = {\n  start: ((action$, state$, { history }) =>\n    action$.pipe(\n      ofType(getType(routerActions.start)),\n      switchMap(\n        () =>\n          new Observable<Location>(observer => history.listen(location => observer.next(location)))\n      ),\n      map(location => routerActions.internal.locationChanged(location))\n    )) as RouterEpic,\n  push: ((action$, state$, { history }) =>\n    action$.pipe(\n      ofType(getType(routerActions.push)),\n      tap(action => {\n        const { path, state } = (action as ReturnType<typeof routerActions.push>).payload;\n        history.push(path, state);\n      }),\n      ignoreElements()\n    )) as RouterEpic,\n  replace: ((action$, state$, { history }) =>\n    action$.pipe(\n      ofType(getType(routerActions.replace)),\n      tap(action => {\n        const { path, state } = (action as ReturnType<typeof routerActions.replace>).payload;\n        history.replace(path, state);\n      }),\n      ignoreElements()\n    )) as RouterEpic,\n  go: ((action$, state$, { history }) =>\n    action$.pipe(\n      ofType(getType(routerActions.go)),\n      tap(action => {\n        history.go((action as ReturnType<typeof routerActions.go>).payload);\n      }),\n      ignoreElements()\n    )) as RouterEpic,\n  goBack: ((action$, state$, { history }) =>\n    action$.pipe(\n      ofType(getType(routerActions.goBack)),\n      tap(() => history.goBack()),\n      ignoreElements()\n    )) as RouterEpic,\n  goForward: ((action$, state$, { history }) =>\n    action$.pipe(\n      ofType(getType(routerActions.goForward)),\n      tap(() => history.goBack()),\n      ignoreElements()\n    )) as RouterEpic\n};\n\nexport const routerEpic = combineEpics<RouterEpic>(\n  routerEpics.start,\n  routerEpics.push,\n  routerEpics.replace,\n  routerEpics.go,\n  routerEpics.goBack,\n  routerEpics.goForward\n);\n\nexport type RouterState = Readonly<{ location?: Location }>;\n\nconst reducer: Reducer<RouterState, RouterAction> = (\n  state: RouterState = {},\n  action: RouterAction\n) => {\n  switch (action.type) {\n    case getType(routerActions.internal.locationChanged):\n      return { ...state, location: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport { FaFacebookSquare, FaLinkedinIn, FaGithub } from 'react-icons/fa';\n\nconst Footer: React.FC = () => {\n  return (\n    <footer className=\"px-4 py-16 mt-4 text-gray-300 bg-gray-900\">\n      <ul className=\"flex justify-center w-full text-2xl sm:text-3xl md:text-4xl\">\n        <li className=\"cursor-pointer hover:text-white\">\n          <FaFacebookSquare />\n        </li>\n        <li className=\"ml-8 cursor-pointer hover:text-white sm:ml-10 md:ml-12 lg:ml-16\">\n          <FaLinkedinIn />\n        </li>\n        <li className=\"ml-8 cursor-pointer hover:text-white sm:ml-10 md:ml-12 lg:ml-16\">\n          <FaGithub />\n        </li>\n      </ul>\n      <hr className=\"my-8 border-0 border-gray-800\" />\n      <ul className=\"flex justify-center w-full text-xs font-bold\">\n        <li className=\"cursor-pointer hover:text-white\">About Me</li>\n        <li className=\"ml-6 cursor-pointer hover:text-white\">Contact</li>\n      </ul>\n      <hr className=\"my-8 border-0 border-gray-800\" />\n      <div className=\"w-full text-xs text-center text-gray-300\">\n        <span>&copy; Copyright {new Date().getFullYear()}</span>{' '}\n        <span className=\"font-bold\">Hansel De La Cruz</span>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport { FaBars, FaGlobeAmericas, FaRegBookmark } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RemoveScroll } from 'react-remove-scroll';\nimport { NavLink } from 'react-router-dom';\nimport { animated, useSpring } from 'react-spring';\nimport { RootState } from '../ducks';\nimport { localeActions } from '../ducks/locale';\n\nconst Header: React.FC = () => {\n  const dispatch = useDispatch();\n  const selected = useSelector((state: RootState) => ({\n    locale: state.locale\n  }));\n\n  const [showSidebar, setShowSidebar] = useState(false);\n  const [showLanguageModal, setShowLanguageModal] = useState(false);\n\n  const sidebarSpring = useSpring({\n    marginLeft: showSidebar ? 0 : -1000\n  });\n\n  return (\n    <>\n      <header className=\"fixed top-0 left-0 z-10 w-full p-6 m-auto text-gray-300 bg-gray-900 shadow-md \">\n        <div className=\"container flex justify-between m-auto sm:px-2 md:px-4 lg:px-8 xl:px-16\">\n          <div className=\"flex my-auto\">\n            <div className=\"flex sm:hidden\">\n              <button\n                onClick={() => {\n                  setShowSidebar(!showSidebar);\n                  setShowLanguageModal(false);\n                }}\n                className=\"focus:outline-none\"\n              >\n                <FaBars className=\"my-auto hover:text-white\" />\n              </button>\n            </div>\n            <div className=\"flex my-auto ml-6 sm:ml-0\">\n              <FaRegBookmark className=\"my-auto text-xl text-gray-600\" />\n              <span className=\"ml-1 font-bold text-white\">Hansel De La Cruz</span>\n            </div>\n            <div className=\"hidden m-auto ml-12 sm:block\">\n              <ul className=\"flex text-xs font-bold\">\n                <li className=\"cursor-pointer hover:text-white\">\n                  <NavLink\n                    to=\"/home\"\n                    className=\"px-1\"\n                    activeClassName=\"border-b-4 border-white text-white\"\n                  >\n                    Home\n                  </NavLink>\n                </li>\n                <li className=\"ml-6 cursor-pointer hover:text-white\">\n                  <NavLink\n                    to=\"/projects\"\n                    className=\"px-1\"\n                    activeClassName=\"border-b-4 border-white text-white\"\n                  >\n                    Projects\n                  </NavLink>\n                </li>\n                <li className=\"ml-6 cursor-pointer hover:text-white\">\n                  <NavLink\n                    to=\"/cv\"\n                    className=\"px-1\"\n                    activeClassName=\"border-b-4 border-white text-white\"\n                  >\n                    CV\n                  </NavLink>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <button\n            onClick={() => {\n              setShowLanguageModal(!showLanguageModal);\n              setShowSidebar(false);\n            }}\n            className=\"focus:outline-none\"\n          >\n            <div className=\"flex my-auto hover:text-white\">\n              <FaGlobeAmericas className=\"my-auto\" />\n              <span className=\"ml-1 text-xs font-bold uppercase\">{selected.locale.language}</span>\n            </div>\n          </button>\n        </div>\n      </header>\n      {/* sidebar */}\n      <div\n        onClick={event => {\n          if (event.target === event.currentTarget) {\n            setShowSidebar(false);\n          }\n        }}\n        className={`${showSidebar ? 'block' : 'hidden'} fixed top-0 left-0 w-full h-full sm:hidden`}\n        style={{ backgroundColor: 'rgba(0,0,0,0.4)' }}\n      >\n        <animated.div\n          className=\"w-5/12 h-full pt-24 text-gray-300 bg-gray-900 shadow-md\"\n          style={sidebarSpring}\n        >\n          <RemoveScroll enabled={showSidebar}>\n            <div>\n              <ul className=\"text-sm font-semibold text-center\">\n                <li\n                  onClick={() => {\n                    setShowSidebar(false);\n                  }}\n                  className=\"cursor-pointer hover:text-white\"\n                >\n                  <NavLink\n                    to=\"/home\"\n                    className=\"px-1\"\n                    activeClassName=\"border-b-4 border-white text-white\"\n                  >\n                    Home\n                  </NavLink>\n                </li>\n                <li\n                  onClick={() => {\n                    setShowSidebar(false);\n                  }}\n                  className=\"mt-8 cursor-pointer hover:text-white\"\n                >\n                  <NavLink\n                    to=\"/projects\"\n                    className=\"px-1\"\n                    activeClassName=\"border-b-4 border-white text-white\"\n                  >\n                    Projects\n                  </NavLink>\n                </li>\n                <li\n                  onClick={() => {\n                    setShowSidebar(false);\n                  }}\n                  className=\"mt-8 cursor-pointer hover:text-white\"\n                >\n                  <NavLink\n                    to=\"/cv\"\n                    className=\"px-1\"\n                    activeClassName=\"border-b-4 border-white text-white\"\n                  >\n                    CV\n                  </NavLink>\n                </li>\n              </ul>\n            </div>\n          </RemoveScroll>\n        </animated.div>\n      </div>\n      {/* language modal */}\n      <div\n        onClick={() => {\n          setShowLanguageModal(false);\n        }}\n        className={`${\n          showLanguageModal ? 'block' : 'hidden'\n        } fixed top-0 left-0 w-full h-full z-50`}\n        style={{ backgroundColor: 'rgba(0,0,0,0.85)' }}\n      >\n        <RemoveScroll enabled={showLanguageModal}>\n          <div className=\"w-3/4 h-auto mx-auto mt-32 text-white rounded\">\n            <h1 className=\"text-lg font-bold text-center\">Choose your preferred language</h1>\n            <div className=\"flex justify-center mt-10\">\n              <button\n                onClick={() => {\n                  dispatch(localeActions.change('en'));\n                  setShowLanguageModal(false);\n                }}\n                className=\"px-6 py-2 border-2 rounded hover:bg-gray-100 hover:text-black focus:outline-none\"\n              >\n                English\n              </button>\n              <button\n                onClick={() => {\n                  dispatch(localeActions.change('es'));\n                  setShowLanguageModal(false);\n                }}\n                className=\"px-6 py-2 ml-6 border-2 rounded hover:bg-gray-100 hover:text-black focus:outline-none sm:ml-10\"\n              >\n                Español\n              </button>\n            </div>\n          </div>\n        </RemoveScroll>\n      </div>\n    </>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nconst CV: React.FC = () => {\n  return (\n    <div>\n      <Helmet>\n        <title>CV - Hansel De La Cruz</title>\n      </Helmet>\n      <p>CV</p>\n    </div>\n  );\n};\n\nexport default CV;\n","import React, { useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { animated, useSpring } from 'react-spring';\n\nconst Home: React.FC = () => {\n  const [active, setActive] = useState(false);\n\n  const spring = useSpring({\n    width: active ? '100%' : '0%',\n    progress: active ? 100 : 0,\n    backgroundColor: active ? 'hotpink' : 'turquoise',\n    config: { duration: 1000 }\n  });\n\n  return (\n    <div>\n      <Helmet>\n        <title>Home - Hansel De La Cruz</title>\n      </Helmet>\n      <p>Home</p>\n      <div\n        onClick={() => {\n          setActive(!active);\n        }}\n        className=\"w-64 h-8 text-center border-4 border-black cursor-pointer\"\n      >\n        <animated.div className=\"w-full h-full text-center bg-red-500\" style={spring} />\n        <animated.div className=\"-mt-6\">\n          {spring.progress.interpolate(x => Math.floor(x as number))}\n        </animated.div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nconst Landing: React.FC = () => {\n  return (\n    <div>\n      <Helmet>\n        <title>Hansel De La Cruz</title>\n      </Helmet>\n      <p>Landing</p>\n    </div>\n  );\n};\n\nexport default Landing;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nconst Projects: React.FC = () => {\n  return (\n    <div>\n      <Helmet>\n        <title>Projects - Hansel De La Cruz</title>\n      </Helmet>\n      <p>Projects</p>\n    </div>\n  );\n};\n\nexport default Projects;\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { animateScroll } from 'react-scroll';\nimport { RootState } from '../ducks';\nimport CV from '../routes/CV';\nimport Home from '../routes/Home';\nimport Landing from '../routes/Landing';\nimport Projects from '../routes/Projects';\n\nconst Routes: React.FC = () => {\n  const selected = useSelector((state: RootState) => state.router);\n\n  useEffect(() => {\n    animateScroll.scrollToTop();\n  }, [selected.location]);\n\n  const renderCatchAll = () => <p>Catch all</p>;\n\n  return (\n    <Switch>\n      <Route exact={true} path=\"/\" component={Landing} />\n      <Route exact={true} path=\"/home\" component={Home} />\n      <Route exact={true} path=\"/projects\" component={Projects} />\n      <Route exact={true} path=\"/cv\" component={CV} />\n      <Route path=\"/\" render={renderCatchAll} />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { animated, useSpring } from 'react-spring';\nimport { RootState } from './ducks';\nimport { localeActions } from './ducks/locale';\nimport { routerActions } from './ducks/router';\nimport Footer from './singletons/Footer';\nimport Header from './singletons/Header';\nimport Routes from './singletons/Routes';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  const locale = useSelector((state: RootState) => state.locale);\n  const router = useSelector((state: RootState) => state.router);\n\n  useEffect(() => {\n    dispatch(localeActions.start());\n    dispatch(routerActions.start());\n    /* dispatch(routerActions.push('/')); */\n  }, [dispatch]);\n\n  const spring = useSpring({ opacity: 1, number: 2020, from: { opacity: 0, number: 0 } });\n\n  return (\n    <div className=\"flex flex-col min-h-screen\">\n      <Header />\n      <animated.main className=\"container flex-1 px-6 mt-20 break-all\" style={spring}>\n        <p className=\"text-center text-red-700 sm:hidden\">XS</p>\n        <p className=\"hidden text-center text-blue-700 sm:block md:hidden\">SM</p>\n        <p className=\"hidden text-center text-green-700 md:block lg:hidden\">MD</p>\n        <p className=\"hidden text-center text-yellow-700 lg:block xl:hidden\">LG</p>\n        <p className=\"hidden text-center text-purple-500 xl:block\">XL</p>\n        <p>{JSON.stringify(locale)}</p>\n        <p>{JSON.stringify(router)}</p>\n        <Routes />\n        <animated.span>{spring.number.interpolate(x => Math.floor(x))}</animated.span>\n        <p>{JSON.stringify(window.location)}</p>\n      </animated.main>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import { createBrowserHistory, createHashHistory, History } from 'history';\n\nlet history: History;\n\nif (\n  window.location.hostname.includes('github.io') ||\n  window.location.hostname.includes('dev.hanseldelacruz.com')\n) {\n  history = createHashHistory();\n} else {\n  history = createBrowserHistory();\n}\n\nexport default history;\n","import { combineReducers } from 'redux';\nimport { combineEpics } from 'redux-observable';\nimport history from '../core/history';\nimport localization from '../core/localization';\nimport localeReducer, { LocaleAction, localeEpic, LocaleEpic, LocaleState } from './locale';\nimport routerReducer, { RouterAction, routerEpic, RouterEpic, RouterState } from './router';\n\nexport const dependencies = {\n  history,\n  localization,\n  localStorage\n};\n\nexport type RootState = Readonly<{ locale: LocaleState; router: RouterState }>;\n\nexport type RootAction = LocaleAction & RouterAction;\n\nexport type RootEpic = LocaleEpic | RouterEpic;\n\nexport const rootEpic = combineEpics<RootEpic>(localeEpic, routerEpic);\n\nexport default combineReducers<RootState, RootAction>({\n  locale: localeReducer,\n  router: routerReducer\n});\n","import LocalizedStrings from 'react-localization';\n\nconst strings = new LocalizedStrings({ en: { language: 'Language' }, es: { language: 'Idioma' } });\n\nexport default strings;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport App from './App';\nimport history from './core/history';\nimport store from './core/redux';\nimport './generated/index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}